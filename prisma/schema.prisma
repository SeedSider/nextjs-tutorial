generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model customers {
  id        String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String @db.VarChar(255)
  email     String @db.VarChar(255)
  image_url String @db.VarChar(255)
}

model invoice_products {
  id            Int           @id @default(autoincrement())
  invoice_id    Int
  product_id    Int
  quantity      Int
  unit_price    Decimal       @db.Decimal(10, 2)
  total_price   Decimal       @db.Decimal(12, 2)
  sale_invoices sale_invoices @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products      products      @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model invoices {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id String   @db.Uuid
  amount      Int
  status      String   @db.VarChar(255)
  date        DateTime @db.Date
}

model products {
  id                Int                @id @default(autoincrement())
  store_id          Int
  registration_code String?            @db.VarChar(500)
  name              String             @db.VarChar(100)
  price             Decimal            @db.Decimal(10, 2)
  quantity          Int
  image_url         String?            @db.VarChar(255)
  description       String?
  invoice_products  invoice_products[]
  stores            stores             @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model revenue {
  month   String @unique @db.VarChar(4)
  revenue Int
}

model sale_invoices {
  id               Int                @id @default(autoincrement())
  store_id         Int
  user_id          String             @db.Uuid
  invoice_date     DateTime           @db.Date
  total_amount     Decimal            @db.Decimal(12, 2)
  invoice_products invoice_products[]
  stores           stores             @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users            users              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model stores {
  id            Int             @id @default(autoincrement())
  user_id       String          @db.Uuid
  name          String          @db.VarChar(100)
  address       String?
  contact       String?         @db.VarChar(50)
  products      products[]
  sale_invoices sale_invoices[]
  users         users           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id            String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String          @db.VarChar(255)
  email         String          @unique
  password      String
  sale_invoices sale_invoices[]
  stores        stores[]
}
